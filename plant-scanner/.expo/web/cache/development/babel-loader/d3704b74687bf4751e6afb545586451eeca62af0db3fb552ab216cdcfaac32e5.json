{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResultScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var imageUri = route.params.imageUri;\n  var plantData = {\n    name: 'Common Dandelion',\n    scientificName: 'Taraxacum officinale',\n    edibility: 'Edible',\n    confidence: '95%',\n    description: 'Dandelion is a common flowering plant and every part of it is edible. The leaves are commonly used in salads, while the roots can be made into tea.',\n    uses: ['Salad greens', 'Tea preparation', 'Traditional medicine', 'Natural dye'],\n    safetyNotes: ['Wash thoroughly before consumption', 'Avoid if harvested from areas treated with pesticides', 'Some people may be allergic', 'Consult with experts before consuming']\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: styles.image,\n      resizeMode: \"cover\"\n    }), _jsxs(View, {\n      style: styles.resultContainer,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.plantName,\n          children: plantData.name\n        }), _jsx(Text, {\n          style: styles.scientificName,\n          children: plantData.scientificName\n        }), _jsx(View, {\n          style: styles.confidenceTag,\n          children: _jsxs(Text, {\n            style: styles.confidenceText,\n            children: [\"Confidence: \", plantData.confidence]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.infoSection,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Description\"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: plantData.description\n        })]\n      }), _jsxs(View, {\n        style: styles.infoSection,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Common Uses\"\n        }), plantData.uses.map(function (use, index) {\n          return _jsxs(Text, {\n            style: styles.listItem,\n            children: [\"\\u2022 \", use]\n          }, index);\n        })]\n      }), _jsxs(View, {\n        style: styles.infoSection,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Safety Notes\"\n        }), plantData.safetyNotes.map(function (note, index) {\n          return _jsxs(Text, {\n            style: styles.listItem,\n            children: [\"\\u2022 \", note]\n          }, index);\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.scanAgainButton,\n        onPress: function onPress() {\n          return navigation.navigate('Scan');\n        },\n        children: _jsx(Text, {\n          style: styles.scanAgainText,\n          children: \"Scan Another Plant\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  image: {\n    width: '100%',\n    height: 300\n  },\n  resultContainer: {\n    padding: 20\n  },\n  header: {\n    marginBottom: 20\n  },\n  plantName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2D3748'\n  },\n  scientificName: {\n    fontSize: 18,\n    fontStyle: 'italic',\n    color: '#4A5568',\n    marginTop: 4\n  },\n  confidenceTag: {\n    backgroundColor: '#48BB78',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    alignSelf: 'flex-start',\n    marginTop: 8\n  },\n  confidenceText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  infoSection: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#2D3748',\n    marginBottom: 12\n  },\n  description: {\n    fontSize: 16,\n    color: '#4A5568',\n    lineHeight: 24\n  },\n  listItem: {\n    fontSize: 16,\n    color: '#4A5568',\n    marginBottom: 8,\n    lineHeight: 24\n  },\n  scanAgainButton: {\n    backgroundColor: '#48BB78',\n    paddingVertical: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 40\n  },\n  scanAgainText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","Text","Image","ScrollView","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","ResultScreen","_ref","navigation","route","imageUri","params","plantData","name","scientificName","edibility","confidence","description","uses","safetyNotes","style","styles","container","children","source","uri","image","resizeMode","resultContainer","header","plantName","confidenceTag","confidenceText","infoSection","sectionTitle","map","use","index","listItem","note","scanAgainButton","onPress","navigate","scanAgainText","create","flex","backgroundColor","width","height","padding","marginBottom","fontSize","fontWeight","color","fontStyle","marginTop","paddingHorizontal","paddingVertical","borderRadius","alignSelf","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","lineHeight","alignItems"],"sources":["/project/sandbox/user-workspace/plant-scanner/src/screens/ResultScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, Image, ScrollView, TouchableOpacity } from 'react-native';\nimport type { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport type { RouteProp } from '@react-navigation/native';\nimport { RootStackParamList } from '../../App';\n\ntype ResultScreenProps = {\n  navigation: NativeStackNavigationProp<RootStackParamList, 'Result'>;\n  route: RouteProp<RootStackParamList, 'Result'>;\n};\n\nexport default function ResultScreen({ navigation, route }: ResultScreenProps) {\n  const { imageUri } = route.params;\n\n  // Mock plant analysis data\n  const plantData = {\n    name: 'Common Dandelion',\n    scientificName: 'Taraxacum officinale',\n    edibility: 'Edible',\n    confidence: '95%',\n    description: 'Dandelion is a common flowering plant and every part of it is edible. The leaves are commonly used in salads, while the roots can be made into tea.',\n    uses: [\n      'Salad greens',\n      'Tea preparation',\n      'Traditional medicine',\n      'Natural dye'\n    ],\n    safetyNotes: [\n      'Wash thoroughly before consumption',\n      'Avoid if harvested from areas treated with pesticides',\n      'Some people may be allergic',\n      'Consult with experts before consuming'\n    ]\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <Image \n        source={{ uri: imageUri }}\n        style={styles.image}\n        resizeMode=\"cover\"\n      />\n      \n      <View style={styles.resultContainer}>\n        <View style={styles.header}>\n          <Text style={styles.plantName}>{plantData.name}</Text>\n          <Text style={styles.scientificName}>{plantData.scientificName}</Text>\n          <View style={styles.confidenceTag}>\n            <Text style={styles.confidenceText}>Confidence: {plantData.confidence}</Text>\n          </View>\n        </View>\n\n        <View style={styles.infoSection}>\n          <Text style={styles.sectionTitle}>Description</Text>\n          <Text style={styles.description}>{plantData.description}</Text>\n        </View>\n\n        <View style={styles.infoSection}>\n          <Text style={styles.sectionTitle}>Common Uses</Text>\n          {plantData.uses.map((use, index) => (\n            <Text key={index} style={styles.listItem}>• {use}</Text>\n          ))}\n        </View>\n\n        <View style={styles.infoSection}>\n          <Text style={styles.sectionTitle}>Safety Notes</Text>\n          {plantData.safetyNotes.map((note, index) => (\n            <Text key={index} style={styles.listItem}>• {note}</Text>\n          ))}\n        </View>\n\n        <TouchableOpacity\n          style={styles.scanAgainButton}\n          onPress={() => navigation.navigate('Scan')}\n        >\n          <Text style={styles.scanAgainText}>Scan Another Plant</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n  },\n  image: {\n    width: '100%',\n    height: 300,\n  },\n  resultContainer: {\n    padding: 20,\n  },\n  header: {\n    marginBottom: 20,\n  },\n  plantName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2D3748',\n  },\n  scientificName: {\n    fontSize: 18,\n    fontStyle: 'italic',\n    color: '#4A5568',\n    marginTop: 4,\n  },\n  confidenceTag: {\n    backgroundColor: '#48BB78',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    alignSelf: 'flex-start',\n    marginTop: 8,\n  },\n  confidenceText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  infoSection: {\n    backgroundColor: 'white',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#2D3748',\n    marginBottom: 12,\n  },\n  description: {\n    fontSize: 16,\n    color: '#4A5568',\n    lineHeight: 24,\n  },\n  listItem: {\n    fontSize: 16,\n    color: '#4A5568',\n    marginBottom: 8,\n    lineHeight: 24,\n  },\n  scanAgainButton: {\n    backgroundColor: '#48BB78',\n    paddingVertical: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 40,\n  },\n  scanAgainText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAW1B,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAA2C;EAAA,IAAxCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACtD,IAAQC,QAAQ,GAAKD,KAAK,CAACE,MAAM,CAAzBD,QAAQ;EAGhB,IAAME,SAAS,GAAG;IAChBC,IAAI,EAAE,kBAAkB;IACxBC,cAAc,EAAE,sBAAsB;IACtCC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE,qJAAqJ;IAClKC,IAAI,EAAE,CACJ,cAAc,EACd,iBAAiB,EACjB,sBAAsB,EACtB,aAAa,CACd;IACDC,WAAW,EAAE,CACX,oCAAoC,EACpC,uDAAuD,EACvD,6BAA6B,EAC7B,uCAAuC;EAE3C,CAAC;EAED,OACEd,KAAA,CAACL,UAAU;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClCpB,IAAA,CAACJ,KAAK;MACJyB,MAAM,EAAE;QAAEC,GAAG,EAAEf;MAAS,CAAE;MAC1BU,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,UAAU,EAAC;IAAO,CACnB,CAAC,EAEFtB,KAAA,CAACR,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACO,eAAgB;MAAAL,QAAA,GAClClB,KAAA,CAACR,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACQ,MAAO;QAAAN,QAAA,GACzBpB,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACS,SAAU;UAAAP,QAAA,EAAEX,SAAS,CAACC;QAAI,CAAO,CAAC,EACtDV,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACP,cAAe;UAAAS,QAAA,EAAEX,SAAS,CAACE;QAAc,CAAO,CAAC,EACrEX,IAAA,CAACN,IAAI;UAACuB,KAAK,EAAEC,MAAM,CAACU,aAAc;UAAAR,QAAA,EAChClB,KAAA,CAACP,IAAI;YAACsB,KAAK,EAAEC,MAAM,CAACW,cAAe;YAAAT,QAAA,GAAC,cAAY,EAACX,SAAS,CAACI,UAAU;UAAA,CAAO;QAAC,CACzE,CAAC;MAAA,CACH,CAAC,EAEPX,KAAA,CAACR,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAV,QAAA,GAC9BpB,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACa,YAAa;UAAAX,QAAA,EAAC;QAAW,CAAM,CAAC,EACpDpB,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACJ,WAAY;UAAAM,QAAA,EAAEX,SAAS,CAACK;QAAW,CAAO,CAAC;MAAA,CAC3D,CAAC,EAEPZ,KAAA,CAACR,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAV,QAAA,GAC9BpB,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACa,YAAa;UAAAX,QAAA,EAAC;QAAW,CAAM,CAAC,EACnDX,SAAS,CAACM,IAAI,CAACiB,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;UAAA,OAC7BhC,KAAA,CAACP,IAAI;YAAasB,KAAK,EAAEC,MAAM,CAACiB,QAAS;YAAAf,QAAA,GAAC,SAAE,EAACa,GAAG;UAAA,GAArCC,KAA4C,CAAC;QAAA,CACzD,CAAC;MAAA,CACE,CAAC,EAEPhC,KAAA,CAACR,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAV,QAAA,GAC9BpB,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACa,YAAa;UAAAX,QAAA,EAAC;QAAY,CAAM,CAAC,EACpDX,SAAS,CAACO,WAAW,CAACgB,GAAG,CAAC,UAACI,IAAI,EAAEF,KAAK;UAAA,OACrChC,KAAA,CAACP,IAAI;YAAasB,KAAK,EAAEC,MAAM,CAACiB,QAAS;YAAAf,QAAA,GAAC,SAAE,EAACgB,IAAI;UAAA,GAAtCF,KAA6C,CAAC;QAAA,CAC1D,CAAC;MAAA,CACE,CAAC,EAEPlC,IAAA,CAACF,gBAAgB;QACfmB,KAAK,EAAEC,MAAM,CAACmB,eAAgB;QAC9BC,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQjC,UAAU,CAACkC,QAAQ,CAAC,MAAM,CAAC;QAAA,CAAC;QAAAnB,QAAA,EAE3CpB,IAAA,CAACL,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACsB,aAAc;UAAApB,QAAA,EAAC;QAAkB,CAAM;MAAC,CAC5C,CAAC;IAAA,CACf,CAAC;EAAA,CACG,CAAC;AAEjB;AAEA,IAAMF,MAAM,GAAGzB,UAAU,CAACgD,MAAM,CAAC;EAC/BtB,SAAS,EAAE;IACTuB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDpB,KAAK,EAAE;IACLqB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDpB,eAAe,EAAE;IACfqB,OAAO,EAAE;EACX,CAAC;EACDpB,MAAM,EAAE;IACNqB,YAAY,EAAE;EAChB,CAAC;EACDpB,SAAS,EAAE;IACTqB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDvC,cAAc,EAAE;IACdqC,QAAQ,EAAE,EAAE;IACZG,SAAS,EAAE,QAAQ;IACnBD,KAAK,EAAE,SAAS;IAChBE,SAAS,EAAE;EACb,CAAC;EACDxB,aAAa,EAAE;IACbe,eAAe,EAAE,SAAS;IAC1BU,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,YAAY;IACvBJ,SAAS,EAAE;EACb,CAAC;EACDvB,cAAc,EAAE;IACdqB,KAAK,EAAE,OAAO;IACdF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDnB,WAAW,EAAE;IACXa,eAAe,EAAE,OAAO;IACxBY,YAAY,EAAE,EAAE;IAChBT,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBU,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACZd,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDc,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACD9B,YAAY,EAAE;IACZiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,SAAS;IAChBH,YAAY,EAAE;EAChB,CAAC;EACDjC,WAAW,EAAE;IACXkC,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,SAAS;IAChBY,UAAU,EAAE;EACd,CAAC;EACD3B,QAAQ,EAAE;IACRa,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,SAAS;IAChBH,YAAY,EAAE,CAAC;IACfe,UAAU,EAAE;EACd,CAAC;EACDzB,eAAe,EAAE;IACfM,eAAe,EAAE,SAAS;IAC1BW,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBQ,UAAU,EAAE,QAAQ;IACpBX,SAAS,EAAE,EAAE;IACbL,YAAY,EAAE;EAChB,CAAC;EACDP,aAAa,EAAE;IACbU,KAAK,EAAE,OAAO;IACdF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}