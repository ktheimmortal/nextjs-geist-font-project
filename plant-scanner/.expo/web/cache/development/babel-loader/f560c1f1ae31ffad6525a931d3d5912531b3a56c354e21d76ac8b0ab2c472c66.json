{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport ScanScreen from \"./src/screens/ScanScreen\";\nimport ResultScreen from \"./src/screens/ResultScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#f5f5f5'\n        },\n        headerTintColor: '#2D3748',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Plant Scanner'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Scan\",\n        component: ScanScreen,\n        options: {\n          title: 'Scan Plant'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Result\",\n        component: ResultScreen,\n        options: {\n          title: 'Analysis Result'\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","StatusBar","HomeScreen","ScanScreen","ResultScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","children","style","Navigator","initialRouteName","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","title"],"sources":["/project/sandbox/user-workspace/plant-scanner/App.tsx"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport HomeScreen from './src/screens/HomeScreen';\nimport ScanScreen from './src/screens/ScanScreen';\nimport ResultScreen from './src/screens/ResultScreen';\n\nexport type RootStackParamList = {\n  Home: undefined;\n  Scan: undefined;\n  Result: {\n    imageUri: string;\n  };\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <StatusBar style=\"auto\" />\n      <Stack.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#f5f5f5',\n          },\n          headerTintColor: '#2D3748',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n        }}\n      >\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen}\n          options={{\n            title: 'Plant Scanner',\n          }}\n        />\n        <Stack.Screen \n          name=\"Scan\" \n          component={ScanScreen}\n          options={{\n            title: 'Scan Plant',\n          }}\n        />\n        <Stack.Screen \n          name=\"Result\" \n          component={ResultScreen}\n          options={{\n            title: 'Analysis Result',\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAUtD,IAAMC,KAAK,GAAGT,0BAA0B,CAAqB,CAAC;AAE9D,eAAe,SAASU,GAAGA,CAAA,EAAG;EAC5B,OACEF,KAAA,CAACT,mBAAmB;IAAAY,QAAA,GAClBL,IAAA,CAACL,SAAS;MAACW,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BJ,KAAA,CAACC,KAAK,CAACI,SAAS;MACdC,gBAAgB,EAAC,MAAM;MACvBC,aAAa,EAAE;QACbC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,SAAS;QAC1BC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAE;MAAAT,QAAA,GAEFL,IAAA,CAACG,KAAK,CAACY,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAErB,UAAW;QACtBsB,OAAO,EAAE;UACPC,KAAK,EAAE;QACT;MAAE,CACH,CAAC,EACFnB,IAAA,CAACG,KAAK,CAACY,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEpB,UAAW;QACtBqB,OAAO,EAAE;UACPC,KAAK,EAAE;QACT;MAAE,CACH,CAAC,EACFnB,IAAA,CAACG,KAAK,CAACY,MAAM;QACXC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAEnB,YAAa;QACxBoB,OAAO,EAAE;UACPC,KAAK,EAAE;QACT;MAAE,CACH,CAAC;IAAA,CACa,CAAC;EAAA,CACC,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}